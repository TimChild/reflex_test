version: "3"

includes:
  web:
    taskfile: ~/github/webserver-personal/Taskfile.yml
    dir: ~/github/webserver-personal
    optional: true
    internal: true

tasks:
  install:
    desc: Install project dependencies and setup pre-commit
    cmds:
      - uv sync --dev
      - task pre-commit-install
  lock:
    desc: Lock and updated dependencies
    cmds:
      - uv lock -U

  pre-commit-install:
    desc: One off setup of pre-commit (uses venv to install pre-commit)
    cmds:
      - uv run --dev pre-commit install

  pre-commit-all:
    desc: Run pre-commit on all files.
    cmds:
      - uv run --dev pre-commit run --all-files --verbose

  run:
    desc: Run reflex locally
    cmds:
      - uv run reflex db migrate && uv run reflex run

  run-compose:
    desc: Run backend similar to production
    cmds:
      - docker compose down
      - docker compose up --watch --force-recreate

  manual-deploy:
    prompt: This is normally handled by a GHA workflow. Are you sure you want to continue?
    desc: Manually deploy the frontend and backend
    vars:
      SSH_NAME: '{{default "webserver" .SSH_NAME}}'
      SITE_NAME: "reflex-example"
    cmds:
      - task: manual-deploy-frontend
        vars:
          SSH_NAME: "{{.SSH_NAME}}"
          SITE_NAME: "{{.SITE_NAME}}"
      - task: manual-deploy-backend
        vars:
          SSH_NAME: "{{.SSH_NAME}}"
          SITE_NAME: "{{.SITE_NAME}}"

  manual-build-frontend:
    desc: Build the the frontend (exports to `./site`)
    cmds:
      - mkdir -p "tmp_frontend_zip"
      - rm -rf "site"
      - mkdir -p "site"
      - uv run reflex export --frontend-only --zip-dest-dir "tmp_frontend_zip"
      - unzip -q tmp_frontend_zip/frontend.zip -d site/
      - rm -r "tmp_frontend_zip"

  manual-deploy-frontend:
    prompt: This is normally handled by a GHA workflow. Are you sure you want to continue?
    desc: Manually copy files to server to deploy (usually should rely on CI/CD instead)
    vars:
      SSH_NAME: '{{default "webserver" .SSH_NAME}}'
      SITE_NAME: "reflex-example"
    cmds:
      - task: manual-build-frontend
      # Initialize the .env file from local only if it doesn't already exist there (generally should be set from GHA)
      - rsync -a --ignore-existing .env {{.SSH_NAME}}:sites/{{.SITE_NAME}}/.env
      - task: web:deploy-static
        vars:
          SSH_NAME: "{{.SSH_NAME}}"
          SITE_NAME: "{{.SITE_NAME}}"
          STATIC_DIR: "site"
          PROJECT_DIR: "{{.TASKFILE_DIR}}"

  manual-deploy-backend:
    prompt: This is normally handled by a GHA workflow. Are you sure you want to continue?
    desc: Build the backend and deploy it to the server (usually should rely on CI/CD instead)
    vars:
      SSH_NAME: '{{default "webserver" .SSH_NAME}}'
      SITE_NAME: "reflex-example"
    cmds:
      - rsync -a --ignore-existing .env {{.SSH_NAME}}:sites/{{.SITE_NAME}}/.env
      - task: web:deploy-docker-backend
        vars:
          SSH_NAME: "{{.SSH_NAME}}"
          SITE_NAME: "{{.SITE_NAME}}"
          PROJECT_DIR: "{{.TASKFILE_DIR}}"

  manual-send-initial-db:
    prompt: This should only need to be done once, are you sure you want to overwrite the database?
    desc: Send an initial state of the database to the server
    requires:
      VARS: [SSH_NAME, SITE_NAME]
    vars:
      SITE_NAME: "reflex-example"
    cmds:
      - ssh {{.SSH_NAME}} "mkdir -p sites/{{.SITE_NAME}}/db"
      - scp db/reflex.db {{.SSH_NAME}}:sites/{{.SITE_NAME}}/db/reflex.db
